[
{
		"title": "Как превратить pdf-форму в обычный pdf",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/pdf-form-to-regular-pdf/",
		"content": "Бывает такое, что есть пдф-форма с заполненными полями, а из неё надо сделать обычный пдф, и чтобы поля остались заполненными, но чтобы это уже была не форма.\nДелается через оптимизацию. Заходим в меню File - Save As Other - Optimized PDF - в окне параметров оптимизации пункт Discard Objects - поставить галочку Flatten form fields, после нажатия OK будет предложено сохранить с другим именем файла.",
		"tags": [ "note","FAQ","pdf"]
},

{
		"title": "Как скривить текст в pdf",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/pdf-convert-to-outlines/",
		"content": "В <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/acrobat-preflight/\">префлайтах</a> в библиотеке Prepress... фиксап Convert fonts to outlines:",
		"tags": [ "note","FAQ","pdf"]
},

{
		"title": "Префлайты",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/acrobat-preflight/",
		"content": "В акробате один из основных инструментов обработки документа - это префлайты. &quot;Предполётная подготовка&quot;, значит. Это в смысле чтобы потом разборов полётов не было. Обычно слово &quot;префлайт&quot; употребляется в смысле проверки, но в акробате там и инструменты анализа и инструменты изменения документа. Наподобие фотошоповских экшенов - то есть пакетные наборы действий.\nЧтобы заюзать префлайты, нам потребуется Acrobat Pro (не Reader). Кроме того, в последних версиях префлайты не ставятся сразу с акробатом, а подкачиваются при первом запуске. Запустить окно префлайтов можно либо сочетанием клавиш Ctrl+Shift+x, либо через набор инструментов: Tools - Optimize PDF, после чего появится панель инструментов, на которой и будет Preflight.\n\nОкно префлайта выглядит так:\n\nВ окне мы видим список префлайт-профилей. Профили бывают трёх видов: для проверки (чеки), для изменения (фиксапы) и составные профили, которые сразу запускают несколько чеков и/или фиксапов, плюс ещё некоторые дополнительные, характерные только для составных профилей, действия.",
		"tags": [ "note","pdf"]
},

{
		"title": "Текст",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/text/",
		"content": "[!FAQ] Вопрос\nКак показать непечатаемые символы (точки вместо пробелов, конец абзаца, табуляцию...)?\n\nМеню Text - Show non-printing characters",
		"tags": [ "note","FAQ"]
},

{
		"title": "Фигурный угол",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/curved-corner/",
		"content": "",
		"tags": [ "note"]
},

{
		"title": "Workspace",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/workspace/",
		"content": "У корела есть такая вещь рабочее пространство. В нём хранятся все настройки корела и интерфейса. Его можно сохранить внутри корела как пресет и его можно экспортировать в отдельный файл, чтобы заново оттуда загрузить при переустановке или загрузить свои настройки в другой корел.",
		"tags": [ "note"]
},

{
		"title": "Как настроить новый документ",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/new-doc-settings/",
		"content": "Как сделать так, чтобы в новом документе всё было настроено, как нам надо?\nЧасть настроек можно задавать через стили.\nНапример, как выставить толщину абриса. Заходим в докер стилей (Window - Dockers - Object Styles), выбираем Graphic (то есть вся графика, кроме тех видов объектов, которые перечислены рядом), задаём свойства абриса и жмём маленькую кнопку Save as new document default.",
		"tags": [ "note"]
},

{
		"title": "Rendering resolution",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/rendering-resolution/",
		"content": "При экспорте в сложный формат, который может сочетать и вектор и растр (например, #pdf ), корел растеризует разные эффекты: линзы, прозрачности, mesh fill'ы. Короче говоря, то, что нельзя адекватно воспроизвести в целевом формате или просто корел не умеет такое конвертировать без искажения. То же самое он делает при отправке на печать.\nИ вот в этой опции — Rendering resolution — мы можем задать разрешение этой самой растеризации. По умолчанию там стандартные 300 dpi. Однако, если мы делаем, например, изображение большого размера, 300 dpi может быть черезчур, и итоговый файл будет гигантским. Или корел вовсе не справится и упадёт. Так что про этот параметр надо тоже помнить и задавать там соответственно.",
		"tags": ["pdf", "note"]
},

{
		"title": "Стартовые настройки",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/color-settings/",
		"content": "Вот настройки цвета, которые подойдут большинству.\n\nВ принципе, можно выставить и забыть до поры до времени.\nМатериалы по теме",
		"tags": [ "note"]
},

{
		"title": "Очистка корела и макетов от мусора",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/garbage-cleaning/",
		"content": "Корел, по мере работы, накапливает кое-какие мусорные данные. Частично в макетах, а частично и в своих недрах. Данные эти неочевидные, передаются через копирование и импорт, таким образом &quot;заражая&quot; документы. Кроме увеличения размера файла документа, корел ещё его долго открывает, долго копирует объекты, да и вообще лишние операции не добавляют ни стабильности ни общей скорости работы.\nObject Data\nПроверено на корелах от 16-го до 24-го, возможно проблема существовала и раньше.\nУ корела есть такая штука, как дополнительные свойства объектов - object data. Видимо, нужны для проектирования и для чего-то такого, что требует привязки к кореловским объектам дополнительных данных (например, стоимости). Стоит только раз открыть файл, загаженный ненужными свойствами - эти данные, вернее - имена переменных, навсегда добавляются в кореловскую базу данных объектов и начинаются тормоза. Чтобы &quot;заразиться&quot; даже копировать ничего не надо - просто открыть.\nЧтобы выяснить, насколько у вас всё в этом плане запущено - обратитесь к докеру object data manager (Window - Dockers - Object Data Manager). В нём нажмите кнопку Open Field Editor - и вам вывалится список переменных этой кореловской базы.\nЕсли всё чисто, то там должно быть только несколько переменных по умолчанию: Name, Cost, Comments, CDRStaticID.\n\nЕсли всё плохо - список будет больше:\n\nЭту лабуду можно удалить вручную из документа - не бойтесь удалить лишнее, переменные по умолчанию потом сами восстановятся. Выделяем все, жмём Delete Fields. Но это будет ещё не кардинальное решение, мы почистили только сам документ - а нам надо обнулить кореловскую базу.\nУ 16-го корела база находится по пути %AppData%\\Corel\\CorelDRAW Graphics Suite X6\\Draw\\Object Data\\ в файле ObjectData.xml.\nПрибить - не вариант, восстановится. Можно просто вычистить из файла всё, или заменить его пустым с тем же именем. Перфекционистам можно сбросить его на файл по умолчанию, берём его здесь (у 16-го корела 64-битной английской версии, у других - по аналогии): %PROGRAMFILES%\\Corel\\CorelDRAW Graphics Suite X6\\Languages\\EN\\Draw\\Object Data\\ и заменяем им файл в AppData. После чего заходим в свойства файла и ставим галочку &quot;только для чтения&quot;. Всё, база больше не будет пополняться.\nКроме этого, всё-таки придётся вручную проверять файлы и вычищать этот мусор из них - это конечно очень муторно, но только массовые чистки спасут Родину. Впрочем, и не вычищая каждый файл, а просто обнулив базу и закрыв её от записи, вы тоже добьётесь какого-то эффекта: на &quot;чистых&quot; и новых документах корел уже не будет тормозить.\nViews\nЗамусоривание случается и у диспетчера видов:\n\nОпять-таки, изначально добрая задумка: возможность сохранить текущий вид какой-то части макета, чтобы к ней потом быстро вернуться. Сохраняется вместе с файлом. Передаётся, в отличие от объект даты, только через импорт, но тоже постепенно накапливается.\nОткройте View Manager (Ctrl+F2), там можно всё выделить с зажатым Shiftом и всё разом удалить.\nSymbols, они же символы\nПроверено в 16-м, но очевидно, что поведение символов с момента их внедрения и до сих пор не изменилось.\nСимволы могут быть удобной штукой в некоторых случаях, но в них есть подводный камень: если даже на рабочих пространствах документа удалить все экземпляры символов, в базе самого документа они остаются и импортируются, таким образом тоже создаётся своего рода &quot;заражение&quot;. Избавиться от символов документе довольно просто: заходим в докер Symbol Manager (Ctrl+F3) и жмём Purge Unused Definitions. Сработает это, конечно, только если символ не используется в документе, а является именно мусорным остатком.",
		"tags": [ "note"]
},

{
		"title": "Что влияет на скорость работы корела",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/corel-speed/",
		"content": "Ну, во-первых, стоит прочесть про <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/garbage-cleaning/\">оптимизацию и очистку мусора</a>. а тут мы поговорим про прочие системные факторы, например, то же железо.\nНижеследующее справедливо, прежде всего, для 16-го корела, в котором автор этих строк провёл примерно восемь лет, и, соответственно, собрана субъективная статистика на одной и той же версии, но на разном железе.\nОперативная память: влияет, до определённого предела. 8 гигабайт для одного корела - достаточно. Нормальный размер кореловского файла - где-то до 100 мегабайт, если файл больше - то вы что-то делаете не так. И поскольку даже один файл большого размера будет ворочаться медленно и печально, то много вы их не откроете - соответственно, вы попросту не сможете задействовать много оперативки. При этом, мы всё равно советуем вам ставить оперативки побольше - для общего удобства работы с системой.\nЖёсткий диск: если корел у вас на SSD - то он будет запускаться немного быстрее, чем с HDD, ну и макеты с SSD будут открываться бодрее. Тут ничего нового.\nПроцессор: не оказывает большого влияния. Разница почти незаметна даже при смене поколений: core duo, i5, Ryzen.\nВидеокарта: не оказывает влияния на 16-й, и непохоже, чтобы была большая разница при работе с новыми корелами.",
		"tags": [ "note"]
},

{
		"title": "Скривление и слияние текста в одно действие",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/weld-text/",
		"content": "В контекстной панели для текста не появляется вариант Weld, но, тем не менее, слияние можно применить к тексту через меню Arrange - Shaping - Weld. Так в одно действие и текст скривится, и буквы сольются. Можно принудительно вывести Weld на контекстную панель текста, например, если часто нужно.\nРаботает только для артистик текста, для параграфа не работает.",
		"tags": [ "note"]
},

{
		"title": "Пресеты для экспорта пдф",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/corelpdf-quick-settings/",
		"content": "Я подготовил три пресета для экспорта пдф из корела - плюс батник, который пропишет эти настройки во все установленные у вас корелы. Эти пресеты - базовые, они не охватывают все возможные сценарии, и предзназначены, прежде всего, для тех, кто ещё не разобрался в настройках экспорта пдф, а типография уже требует прислать в соответствии с требованиями.\nПресета три:\n\n_для редактирования\n_для печати\n_для просмотра\n\n(нижняя чёрточка в названии - чтобы отличить от стандартных пресетов корела)\nдля редактирования - если вам нужно отдать файл так, чтобы принимающая сторона могла его открыть и чего-нибудь в нём пошевелить. Для печати тоже годится, впрочем. Но прозрачности там в несхлопнутом виде, цвета - как в макете, то есть ргб оставлен как ргб, плюс сохранены кореловские слои. По сути, эта пдфка приближена по смыслу к тому, как если бы вы отдали макет в кореле, но при этом имеет большую совместимость за счёт того, что это пдф.\nдля печати - если вы уверены, что ваш макет готов как есть и не требует дополнительного вмешательства, то этот пресет схлопнет все прозрачности за счёт стандарта pdf/x-1a, цвета переведёт в цмик (кроме пантонов), растровые картинки урежет до 300 dpi, задаст принудительный оверпринт чёрному. Такой макет, как правило, вызывает минимум проблем на печати - но приведёт к проблемам, если его понадобится отредактировать.\nдля просмотра - если вам нужно отдать файл заказчику на посмотреть. Цвета в ргб, растр урезан до 150 точек и пожат джпег-компрессией - файл весит немного. Должен нормально открыться в браузере и на телефоне.\nУстановка\nСкачайте два файла: батник и файл с пресетами. Убедитесь, что оба файла лежат в одной папке. Запустите батник replace_corelpdf.cmd - и пресеты экспорта в каждом установленном кореле (кроме портативных) заменяются на скачанный corelpdf.ini. Внутри него, кроме моих трёх пресетов, оставлены стандартные для 16-го корела.\n\n[!warning] Внимание\nЕсли вы уже сами создавали пресеты экспорта пдф, то все они перезапишутся, то есть пропадут.\n\nКонечно, никто не мешает вам вручную скопировать нужные части из файла corelpdf.ini в соответствующий свой, оставив свои пресеты нетронутыми. Мои три пресета там в начале.\nИспользование\nПосле установки пресеты будут вот тут, в окне экспорта в пдф:\n\nПримечания\nДля пресетов _для редактирования и _для печати заданы вылеты по 5 мм. Если макет готовится правильно, то есть обрезной формат задаётся размером страницы - то TrimBox пдфки будет в размер страницы, а размер вылетов не очень важен для нормального софта, в котором делается спуск - софт поставит те вылеты, которые задаст допечатник. Поэтому решено было сделать вылеты максимально большими. Кроме того, по 5 мм - это красиво, это по +10 к обрезному формату. Ну, а если макет готовится как попало - то тут эта опция, опять же, уже никак не повредит. Единственный вариант, когда эта опция может повредить - если допечатник не понимает, что такое TrimBox, и очень удивится сильно бо́льшему размеру макета. Но что поделать. Ну а для просмотрового пресета полей нет - как раз чтобы не волновать понапрасну. Пусть заказчик видит готовый формат.\nПотом, во всех пресетах я оставил внедрение шрифтов. Для небольших макетов на печать это, в принципе, не нужно, можно было бы и скривить. Но для многостранички имеет смысл внедрять шрифты - у корела в большинстве случаев с этим проблем нет. Для той же просмотровой версии внедрение и скривление - две большие разницы в размере файла.\nПресеты делались таким образом, чтобы завелось и на 16-м и на 24-м. Пришлось пойти на кое-какие дополнительные мелкие компромиссы - например, новые корелы не поддерживают версию пдф 1.3, поэтому пришлось версию для просмотра сделать 1.4, а версию для печати - pdf/x-1a, для схлопывания прозрачностей. Это мне показалось важным.",
		"tags": [ "note","pdf"]
},

{
		"title": "Blend (перетекание)",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/blend/",
		"content": "[!FAQ] Вопрос\nПочему происходит вот такая ерунда?\n\nПереверните один из объектов по вертикали:",
		"tags": [ "note","FAQ"]
},

{
		"title": "PowerClip",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/powerclip/",
		"content": "[!FAQ] Вопрос\nКак масштабировать/двигать фрейм PowerClip, не меняя размер содержимого в нём?\n\nНадо выключить залочивание контента. Отожмите кнопку Lock Contents to PowerClip. Только потом не забудьте обратно включить, прежде чем куда-нибудь этот файл отдать. Ну, представьте, что будет, если кто-нибудь пошевелит макет, в котором есть незалоченные поверклипы. Всё поедет.",
		"tags": [ "note","FAQ"]
},

{
		"title": "Восстановление фото при помощи Stable Diffusion",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/photo-restoration-sd/",
		"content": "На эту тему конечно куча статей есть от людей сильно прошаренных именно в <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/about-stable-diffusion/\">Stable Diffusion</a>. Расскажу в общих чертах, как это несколько раз делал составитель Короедства.\nИмеется фото, например такое:\n\nСуём в фотошоп, чистим крупными мазками, крупные царапины там, вмятины, убираем основные артефакты, убираем фон. Получается что-то такое:\n\nВ Stable Diffusion делаем две вещи: сначала CodeFormer'ом, на вкладке Extras который, восстанавливаем фото - восстановятся при этом в основном лица, но нам это и надо:\n\n(не пойму только, откуда вылезла рамка)\nПотом с восстановленного перегенерируем на вкладке img2img, чтобы примерно похоже было - лица непохожие будут:\n\nКонечно тут надо много заходов сделать, подобрать Denoising strength. Здесь было 0,25.\nПотом идём в фотошоп, накладываем нагенерённое на то, что из-под кодформера, и прорезаем в нагенерённом дырки под лица. Конечно я не очень аккуратно сделал, но направление такое:",
		"tags": [ "note"]
},

{
		"title": "Коротко о Stable diffusion",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/about-stable-diffusion/",
		"content": "В этом разделе я расскажу о своём небольшом опыте использования этой нейросети для генерации изображений.\nСтавится Stable diffusion на комп. Нужна крепкая видюха, в смысле, примерно на уровне чтобы запускались современные игры. У меня 1060.\nСначала я бессмысленно ковырялся, пока не наткнулся на Хруста. В принципе, на его канале есть всё, включая портабельный дистриб Stable Diffision от a1111. И если sd - это база в нейросетевой генерации изображений, то вариант от a1111 - это база базы. Ну а вариант установочных файлов от Хачатура, который Xpuct - это база базы базы.\nЕсли упрощённо, то Stable diffusion устроен так. Есть сам программный комплекс, который управляет генерацией. В нём есть разные составляющие, самая важная из которых - это базовая модель, она же checkpoint. Чекпоинт содержит в себе результат обучения на картинках, то есть некоторую базу данных, которая говорит нейросети о том, как по данному промту рисовать картинку. Чекпоинтов много разных, их можно менять под задачи. Я пользуюсь практически одной моделью, от того же Хруста, которая Deliberate.\nНа основе базовой модели можно выполнять несколько действий: txt2img - генерация картинки по промту (по текстовому описанию), img2img - генерация картинки на основе существующей, inpaint - изменение частей картинки и sketch - генерация картинки по наброску. Для inpaint, как правило, нужен особый чекпоинт, специально для инпаинтинга.\nКроме базовой модели, есть вспомогательные, которые подключаются дополнительно к базовой, для того, чтобы её в расширить в нужном направлении - грубо говоря, там либо дополнительные изображения, либо дополнительные стили. Эти модели бывают разных форматов - Lora, embedding...\nДополнительно, для стейбла есть must-have плагины, без который не то чтобы никак, но сильно упрощают жизнь (удлинняя время генерации :))) Например есть комплекс всяких дополнительных фич для генерации - ControlNet, у неё свои доп. модели, позволяет, например, сгенерировать картинку в стиле другой картинки, или взять какие-то её черты, или общий стиль, или даже изменить в нужном направлении. Есть ADetailer для более тщательной дорисовки лиц. Есть FaceSwapLab, которую можно обучить на фотках человека и она будет гармонично подрисовывать в сгенерённые изображения его лицо.\nРабота со стебйлом (у меня) в общих чертах устроена так. Сначала генерятся варианты небольшого размера - подбирается и оттачивается промпт. Как вариант - можно брать за основу какую-то существующую картинку - то есть сразу идти либо в img2img или с помощью ControlNet. Если никак не получается какой-то элемент картинки - двигаемся в инпаинт и там догенерируем в нужной области. Как только получилась удачная картинка - увеличиваем через встроенную увеличилку в extras, а потом на основе увеличенной картинки в img2img генерим финальную большую - это медленно, поэтому сразу так делать не вариант, если у вас, конечно, не видюха 4090.",
		"tags": [ "note"]
},

{
		"title": "Об чём это всё",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/",
		"content": "Об чём это всё\nПрепресс-привет, как говорится!\nЕсли, едва завидев заголовок, ты вскричал, что правильно писать &quot;о&quot; а не &quot;об&quot; — поздравляю: ты граммар-наци внимателен к деталям, а это в нашем деле важно. Впрочем, чувство юмора в нашем деле тоже пригодится.\nРечь в этом короедстве пойдёт прежде всего о нашем любимом кореле и с чем его едят.\nРассчитано всё это добро в основном на начинающих, продолжающих и конченных профессионалов корела и индустрии воспроизводства изображений вообще, хотя первые ничего не поймут, вторые и сами прекрасно разберутся, а последние и так всё прекрасно знают.\nСтиль подачи материала — мясо и лайфхак, сочная суть и минимум воды. Всё как мы любим. Обленился и не хочешь читать долгих книжек? Получи впрыск информации в мозг, но помни: без практики лайфхаки очень быстро превращаются в тыкву.\nАвторство лайфхаков сих, как ты понимаешь, народное, а народная мудрость весьма консервативна и пользует 16-й корел, да ещё и английский. Что поделать: дань традиции.",
		"tags": [ "note","gardenEntry"]
},

{
		"title": "Выбор монитора",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/display/",
		"content": "Что в монике главное\nРазмер. Размер — дело вкуса, тут важно под этот самый размер подобрать разрешение матрицы. Я люблю крупный пиксель, чтобы этот самый пиксель видеть, хотя бы в очках. Кроме того, с крупным пикселем удобоваримее работает старый софт, который не умеет увеличиваться средствами 11-й винды.\n\nМне нравится размер 27 дюймов, и для него подходит разрешение FullHD (1920×1080).\n\nТип матрицы — IPS. Может быть, и VA ничего, но не знаю, не щупал.\nПодключение только DVI или DisplayPort, никакого VGA.\n\nHDMI тоже не стоит: там есть режимы, которые режут битность цвета, в общем, нафиг.\n\nЖелателен заводской режим sRGB (можно посмотреть, скачав для приглянувшейся модели мануал).\n\nЕсли его нет — ну что ж, можно попробовать сбросить все настройки на по умолчанию, чтобы профиль был &quot;нейтральный&quot; или что-нибудь в этом роде, чтобы яркость-контрастность стояло по умолчанию (обычно там посередине ползунки).\n\nТут мы говорим о монике со стандартным охватом, который как раз sRGB. Бывают и с расширенным, но они дорогие, их надо калибровать, и если вы соберётесь брать себе такой девайс, то вам потребуется более серьёзная теоретическая подготовка, чем прочтение этой статьи.\nВ итоге,\nесли сделать всё правильно, достаточно подключить монитор, выставить режим sRGB в настройках и не ставить никаких профилей — или поставить профиль sRGB, что одно и то же. И у вас будет база для правильного отображения цвета.\nПроверить правильность можно утилиткой CLTest. Инструкция в комплекте, она немного устаревшая, ещё для эпохи CRT, но смысл в том, чтобы при запуске поле было серым градиентом, если цветнит — настройка моника неправильная.",
		"tags": [ "note"]
},

{
		"title": "Полезные ссылки",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/links/",
		"content": "Короедствo в формате видеороликов - на ютубе.\nКороедство во вконтактике.\nМакросы для корела от составителя Короедства - паблик вконтакте, все макросы бесплатные и с открытым исходным кодом, также можно заказать макрос за денюжку.\nТверское, мать его, лого - группа вконтакте для безвозмездного обмена контентом (векторным клипартом, логотипами, шрифтами и т. д.), там же вы сможете найти уроки и советы по векторной графике, скачать качественный вектор, хорошие шрифты, получить дельный совет по работе в векторных редакторах. Alma mater Короедства, которое и возникло просто как место для хранения ответов на частые вопросы с &quot;Тверского&quot;.",
		"tags": [ "note"]
},

{
		"title": "Каталогизация макетов",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/how-to-catalog/",
		"content": "Как сортировать базу макетов, чтобы не заблудиться.\nОбщие соображения\nЯ допечатником работаю, поэтому немного своя специфика. Но в целом так.\nНа первом уровне папок - заказчики. Это почти везде так.\n\nВнутри каждой папки с заказчиком - папки типа &quot;входящее&quot;, &quot;рабочее&quot;, &quot;готовое&quot; и &quot;исходящее&quot;:\n\nРассмотрим эти папки поподробнее.\nГотовое\nОсновной смысл в том, что каждый макет должен иметь только одну версию - ту, которая представляет из себя готовый макет. Готовые макеты лежат в папке &quot;готовое&quot;. По какому принципу там внутри - опять же, можно по-разному. Упаковочное, что имеет штрих-код, удобно называть по последним четырём цифрам шк. Или по иному артикулу. Далее название продукта, возможно с типом в начале, и размер макета. Напр. 0169 торт Зимний вальс 239x112x80\n\nТакже можно разложить макеты, если их много, внутри папки &quot;готовое&quot; по подпапкам по какому-то обобщающему признаку. Например, &quot;уп&quot; (упаковка), &quot;брош&quot; (брошюры), &quot;кал&quot; (календари) :)\n\nСтарые версии макетов, которые когда-то были готовыми и актуальными, можно хранить в подпапке АРХИВ (внутри готовых/вид продукции). Удобно внутри создавать папки с датами. Даты лучше писать сначала год, потом месяц, потом день. Для того чтобы, при общей сортировки по имени, папки с датами сортировались по дате.\n\nЕсли вы работаете в тотал коммандере, есть удобная утилитка, которую можно настроить на создание папки с текущей датой в текущей папке. Или можно батник какой-нибудь написать.\n\nРабочее\nВсякие обмылки, недоделки, недомакеты, логотипы и запчасти к макетам, картинки, фотошопные коллажи и всякое такое кладём в подпапку &quot;рабочее&quot;. Там можно так же создавать подпапки с датой для вещей, имеющих временную привязку и просто папки, а что-то и в корень можно положить:\n\nВ том числе там можно создать текстовый файл типа &quot;заметки&quot;, куда складывать контакты заказчика, фиксировать договорённости, возможно вести историю каких-то ключевых моментов:\n\nВходящее\nНу, тут просто - это материалы от заказчика &quot;как есть&quot;, пока вы не начали с ними работу. Если вы дизайнер, то, возможно хранение этого добра не очень актуально, а для допечатника важно хранение истории макетов в том виде, как они были присланы:\n\nИсходящее\nЕсли вы дизайнер, то тут могут быть макеты в том виде, в котором вы их шлёте заказчику/на печать. В кривых, с растрированием эффектов, с какими-то ситуационными доработками, которые произошли уже после того, как макет получил статус &quot;готового&quot;.\n\nЯ не настаиваю на том, что растрирование должно происходить уже после готовности - это для примера. Я, в скобках скажу, считаю, что лучше поместить схлопнутый вариант редко меняющегося, скажем, фона сразу в файл в &quot;готовых&quot;, а несхлопнутый вариант как раз оставить в &quot;рабочем&quot;. Но дело вкуса.\n\nДля допечатника, основной продукт может быть в отдельной папке - &quot;спуски&quot;, либо спуски вовсе могут лежать прямо в корне, а в папке &quot;спуски&quot; будет архив прошлых лет. Но в папке типа &quot;исходящее&quot; могут храниться, например, макеты для печати на стороне, или шаблоны, которые вы отправляли дизайнеру заказчика.\n\nДругие папки, которые могут быть\nУ меня такие вещи, как pdf'ы на вывод, чертежи штампов и просмотровые джпеги/пдфы для согласования, хранятся отдельно от основного каталога. Но в принципе, можно хранить там же, в папке с заказчиком, добавив соответствующих подпапок.",
		"tags": [ "note"]
},

{
		"title": "Установка и обслуживание шрифтов",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/fonts-management/",
		"content": "Расскажу, как правильно устанавливать шрифты, если работаете преимущественно в кореле, и как можно попробовать починить, если слетели.\nОсновные принципы\nВ системной папке Windows\\Fonts лежат только системные шрифты.\nОстальные шрифты устанавливаются менеджером шрифтов &quot;с места&quot;, то есть подключаются в систему без копирования в системную папку.\nЕсли что-то сломалось - отключаем свои шрифты и восстанавливаем системные.\nУстановка\nС корелом до 17-й версии включительно идёт менеджер шрифтов Font Navigator, а с 18-й версии - Font Manager. Это, прямо скажем, не самые удобные менеджеры шрифтов, но у них есть одна полезнейшая фича. Если указать им место, где вы храните все шрифты (то есть базу шрифтов), то, при открытии в кореле макета с неустановленным шрифтом, они могут найти этот шрифт в базе и задействовать его. Font Navigator временно, до перезагрузки, подключает шрифт в систему. Font Manager вообще умеет задействовать шрифты в кореле без установки в систему. Поэтому эти менеджеры дают удобство, особенно при работе с большим количеством чужих макетов.\nТут важно в принципе пользоваться каким-нибудь менеджером шрифтов, потому что только так можно подключить шрифт без копирования в системную папку.\nСхема такая: храним шрифты (желательно) в одном месте, создаём понятную вам базу шрифтов в вашем менеджере (все ваши шрифты вообще). Из этой базы создаём пресет(ы) тех шрифтов, которыми будете пользоваться и которые будут подключены. Количество шрифтов не должно быть запредельным. Думаю, что для обычного подключения максимум где-то 1000 шрифтов, дальше уже будут проблемы. Возможно, в Font Manager'е можно безболезненно задействовать (без подключения в систему) и большее количество - но точно не скажу, я работаю в 16-м кореле, и у меня, соотвественно, Font Navigator.\nЕстественно, что менеджер шрифтов, через который шрифты устанавливаются, должен быть один, все не-системные шрифты должны управляться из одного места.\nВ системной папке должны лежать только те шрифты, которые ставятся с программами и системой (винда, офис, адоб).\nТак что если у вас не чистая система, то, чтобы &quot;сбросить&quot; систему шрифтов и начать с чистого листа, переходите сразу к пункту &quot;жёсткохардовый способ&quot;.\nПочинка системы шрифтов\nВремя от времени вышеуказанная прекрасная схема слетает. Можно, конечно, по старинке переставить винду :). Но есть и более бескровный вариант.\nДля такого периодического обнуления системы шрифтов, нам понадобится, во-первых, архив тех шрифтов, которые должны находиться в системной папке, во-вторых - reg-файл той ветки реестра, где эти шрифты стоят, и там, соответственно, только эти шрифты, ничего лишнего. Ссылки на эти файлы для семёрки и десятки будут в конце заметки.\nПри этом есть два способа сброса: мягкий и жёсткий. Обычно хватает мягкого, жёсткий способ хорош, в основном, если есть подозрение, что заменены сами файлы системных шрифтов.\nМелкомягкий способ\nОтключаем наш(и) набор(ы) шрифтов в менеджере.\nСносим в реестре ветку HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Fonts.\nТут же импортируем наш reg-файл, то есть воссоздаём все подключения системных шрифтов в девственном виде. Перезагружаемся, подключаем наш набор шрифтов обратно.\nПриложенные reg-файлы уже содержат команду предварительного удаления ветки реестра - так что их можно просто импортировать.\nЖёсткохардовый способ\nЕсли в системной папке всё совсем запущено: много мусора или удалена/заменена часть системных шрифтов.\nОтключаем набор шрифтов, сносим ветку, импортируем reg-файл, как в мягком способе.\nЗагружаемся с какого-нибудь live-загрузочного диска/флешки с системой (например с популярной сборки от Strelec).\nУдаляем всё из папки системных шрифтов Windows\\Fonts.\nКопируем туда архив верных системных шрифтов.\nПерезагружаемся в систему, подключаем наш(и) набор(ы) шрифтов обратно.\nФайлы\nАрхивы шрифтов и reg-файлы для обнуления\nЧто по ссылке:\n\nшрифты Windows 7.7z - родные шрифты от Windows 7\nшрифты Windows 7.reg - файл реестра для них\nшрифты Windows 7 + Office 10.7z - родные шрифты от Windows 7 плюс шрифты десятого офиса (то есть то, что находится в системной папке при установке чистой системы и офиса)\nшрифты Windows 7 + Office 10.reg - файл реестра для винды+офиса\nшрифты Windows 7 + Office 10 без кракозябр.reg (рекомендую) - файл реестра для винды+офиса, который не подключает ряд офисных шрифтов с отсутствующей кириллицей.\nшрифты Windows 10.7z - родные шрифты от Windows 10\nшрифты Windows 10.reg - файл реестра для них\n\nПробовал сделать связку сразу с офисом, как в семёрке, но столкнулся с пропаданием иконок. Пока не понял, в чём дело.",
		"tags": [ "note"]
},

{
		"title": "Артефакты сглаживания",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/anti-aliasing/",
		"content": "Когда мы хотим визуализировать векторное изображение, нам приходится превращать его в растр - то есть в изображение пиксельное. На экране - пиксели, при экспорте джпегов, пнг и тифов - тоже пиксели. Этот процесс имеет некоторые особенности.\nСглаживание (anti-aliasing)\nПо сути, при растрировании, векторная программа накладывает на рабочее пространство сетку, соответствующую пикселям будущего растрового изображения, с заданным <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/size-and-resolution/\">разрешением</a>. И для каждой ячейки этой сетки выясняется доминирующий цвет - он и становится цветом пикселя. Но это упрощённый подход, без сглаживания, при котором у объектов визуально получаются рваные края и зазубрины.\nЧтобы изображение выглядело более мягко и переходы между границами были более плавными, используются всякие алгоритмы сглаживания. Общий смысл этих алгоритмов сводится к тому, что цвет пикселя начинается зависеть от цвета соседних пикселей - он как бы размывается. В основном это даёт приятный эффект. Недостаток в том, что вертикальные и горизонтальные линии объектов, которые проходят не чётко по границам пикселей - то есть почти всегда - &quot;размазываются&quot; на соседние пиксели, становятся размытыми:\n\nObject hinting\nОдин из способов избавиться от артефактов сглаживания на краях в кореле - это задание свойства Object hinting (в русском переводе оно называется &quot;подсказки к объектам&quot; - ошибка перевода, кочующая от версии к версии). Вертикальные и горизонтальные края объектов с таким свойством корел начинает укладывать чётко в границы между пикселями. Эффект этот - чисто визуальный, на самом деле объект не перемещается и не изменяется:\n\nСвойство это работает при любом растрировании: как на экране, так и при растрировании в документе, так и при растрировании при экспорте. Его удобно применять для объектов размером значительно больше размера самой растровой сетки, например для фоновых заливок. Маленькие объекты при привязке к сетке слишком заметно изменятся в размере:\n\nМатериалы",
		"tags": [ "note"]
},

{
		"title": "Соотношение размера и разрешения",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/size-and-resolution/",
		"content": "Размер в пикселях, физический размер и разрешение растрового изображения\nНачнём, для простоты, с растра. Поскольку растровое изображение состоит из точек, то у него есть одно неотъемлемое свойство: это размер в точках, то есть сколько точек оно имеет по ширине и сколько по высоте. Например, изображение может быть 4000×3000 точек. Этот размер также называется размером в пикселях.\n\nИногда этот размер и называют разрешением (resolution). Например, можно услышать, что разрешение фотографии — 1280×720 пикселей, часто говорят о разрешении экрана — имея в виду, опять же, размер в точках. Но в области печати это создаёт путаницу. Лучше разрешением называть именно ту характеристику, о которой пойдёт речь далее.\n\nИзображение может иметь две другие, не присущие ему неотъемлемо характеристики, связанные друг с другом: это физический размер и разрешение.\nФизический размер — это размер в единицах реального мира, который можно прописать в файле с изображением, чтобы зафиксировать наше намерение, например, его напечатать в конкретном размере. Пусть наша растровая картинка 4000×3000 пикселей будет фотографией в альбом, и мы можем прописать, что мы собираемся печатать её размером 200×150 мм.\nИ тут появляется вторая характеристика: разрешение. Разрешение для растрового изображения — это сколько точек исходной картинки войдёт на единицу заданного физического размера по ширине или высоте. Или можно иначе сказать: какого размера в точках у нас тут один дюйм, или сантиметр или миллиметр. Таким образом, разрешение — величина производная от размера в точках и физического размера. Это один из параметров, который определяет качество будущей печати: чем больше у нас при печати будет точек на единицу натурального размера, тем лучше передадутся детали, тем выше качество.\nРазрешение = Размер в пикселях / Физический размер\n\nНапример, если мы поделим ширину нашей картинки в пикселях на ширину в мм, то получим 4000/200=20 точек на мм. Разрешение принято считать в точках на дюйм, поэтому пересчитаем: в дюйме 25 мм, соответственно, разрешение будет 25 * 20 = 500 точек на дюйм (dots per inch — dpi). Много это или мало? Зависит от способа печати и назначения изображения. Для качественной фотографии— более чем достаточно.\nЭти два параметра — физический размер и разрешение — мы можем менять как угодно, одно будет зависеть от другого — и это никак не изменит само изображение (если мы будем менять без ресемплинга — о чём ниже).\nМы можем выяснить, какого максимального размера мы можем напечатать данное растровое изображение при известном требовании к разрешению. Например, для офcетной полиграфии это 300 dpi, следовательно, мы можем сделать наше изображение максимальным размером\n4000 / 300 = 13,3 дюйма,\nили 13,3 * 25 ≈ 333 мм по ширине.\n\nНаконец, мы так же можем определить, каким должен быть размер изображения в пикселях, если мы хотим напечатать его в известном физическом размере и разрешении. Скажем, для вертикального баннера размером 2×3 метра при разрешении 75 dpi нам понадобится исходник размером\n2000 мм / 25 = 80 дюймов\n80 * 75 = 6000 пикселей по ширине,\n\n3000 мм / 25 = 120 дюймов\n120 * 75 = 9000 пикселей по высоте —\n\n6000 × 9000 пикселей.\n\nРазрешение, как правило, единое по высоте и ширине, но это необязательно — оно может быть разным. Хотя и не все форматы файлов это поддерживают.\n\nОсобенность векторного изображения\nВектор, в отличие от растра, не состоит из точек. Поэтому особенность вектора в том, что он имеет свободу и в размере в пикселях. Размер в пикселях для вектора — такая же условность, как и физический размер, и может быть задан любым, если возникнет потребность задать его в таких единицах. Например, если мы рисуем в кореле векторную графику, которая потом станет растровой картинкой для отображения на экране (например, на сайте) — то мы можем для удобства задать размер документа в пикселях.\nИтак, естественным и неотъемлемо присущим растру свойством является размер в пикселях. Физический размер и разрешение — произвольные параметры, один из которых может быть задан свободно, другой будет производным от него и от размера в пикселях. У вектора все три рассматриваемых параметра произвольны, любые два из которых могут быть заданы свободно, третий же будет производным от них.\nРесемплинг\nПогрузимся в тему дальше. До сих пор мы говорили о том, что физический размер и разрешение растрового изображения можно свободно менять, не затрагивая само изображение. Иначе говоря, речь шла о недеструктивном редактировании — об изменениях декларативных, так сказать, виртуальных — не затрагивающих исходные пиксели.\nОднако, мы, конечно же, можем изменить и саму картинку, увеличить или уменьшить количество точек, создав фактически другое изображение, похожее на предыдущее. Такое преобразование называется ресемплинг. Если упростить алгоритм, то можно сказать, что при уменьшении картинки лишние пиксели убираются, а при увеличении — вставляются между исходными пикселями и закрашиваются в похожий цвет. Когда в обиходе говорят про уменьшение или увеличение разрешения, имеют в виду как раз ресемплинг при сохранении целевого размера для печати.\nУменьшение разрешения (downsampling):\n\n164x119 пикселей -&gt; 77x56 пикселей\nУвеличение разрешения (upsampling):\n\n164x119 пикселей -&gt; 928x674 пикселя\nТакое увеличение, как нетрудно догадаться, хоть и увеличивает количество пикселей, но не улучшает качество изображения по сути, так как не добавляет новой информации. Добавляется лишь эффект визуального сглаживания.\nВ фотошопе за ресемплинг отвечает вот эта галочка в окне изменения размера изображения:\n\nЕсли она убрана — изменение физического размера и разрешения не затронут пиксели самой картинки.\nМатериалы по теме\nПочему 300 dpi? @Dopechatnik.ru",
		"tags": [ "note"]
},

{
		"title": "Конверсия яркой RGB картинки в CMYK",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/saturated-rgb-to-cmyk/",
		"content": "Как нам конвертнуть в &quot;смук&quot; сочную, яркую картинку, чтобы она не стала плоской? Бледной она, конечно, всё равно станет: стандартный цмик - пространство относительно узкое, но об том, а чё это оно узкое, мы поговорим как-нибудь в другой раз.\nТут пригодится специальный профиль Михаила Сартакова (cielab.xyz) для конверсии насыщенных ргбшных картинок в цмик с максимальным сохранением цветовых переходов. Раньше такое можно было сделать в два движения: сначала переводим ргб в расширенный цмик, а потом уже этот цмик ужимаем до обычной fogra39. А теперь, при помощи этого профиля, можно сделать в одно.\nКонверсию делаем в фотошопе через convert to profile (так удобнее всего) с интентом Preceptual либо Saturation. Смотря что больше по картинке подходит.\nПрофиль называется ISOcoated_v2_CIECAM_compress.icc, почитать про него побольше и скачать можно вот тут.\nНиже - небольшая сводка, чего у нас получается. Да, изображение в целом получается бледнее - это потому, что профиль нацелен на сохранение именно баланса. То есть вся картинка бледнеет, чтобы уместить пиковую насыщенность, особенно это видно в интенте Saturation, который заточен под максимальное сохранение плавности переходов (по крайней мере, в данном профиле). А потом, при желании, картинку можно подкрутить уже в цмике.",
		"tags": [ "note"]
},

{
		"title": "Почему бы не печатать красками RGB",
		"date":"Mon Sep 23 2024 18:05:31 GMT+0000 (Coordinated Universal Time)",
		"url":"/why-not-RGB-inks/",
		"content": "Почему для печати используется именно цмик? Ведь вокруг нас всё в ргб: глаз видит в ргб, в матрице фотоаппарата — ргб-сенсоры, сканер тоже сканирует в ргб, ну и наконец экран монитора тоже светит в ргб. Почему бы не заправить в принтер краски Red, Green и Blue и ими печатать?\nДавайте разберёмся.\nRGB — это стимулы, которые воздействуют на сетчатку глаза или матрицу камеры. Проще всего представить как лампочки. Нет света — чёрный цвет. Горят две из них — какой-то яркий: например, если горят R и G — то ярко-жёлтый. Горят все три — белый. Чем больше лампочек горит, чем больше стимулов приходит — тем ярче цвет, тем ближе к белому.\nТеперь давайте возьмём ведро красной краски. Если мы мазнём такой краской по бумаге — получим условный Red. Что при этом происходит. Белый цвет бумаги отражает весь цветовой спектр: R, G и B. Красная краска, чтобы быть красной, перекрывает части спектра G и B, чтобы от бумаги в глаз отражался только R:\n\nТо есть можно сказать, что суть красной краски в том, что она не-красная: она закрывает всё, кроме красного. Красный краситель в чём-то противоположен красному цвету: он сам не излучает красный свет, но он мешает другим цветам излучаться. Зелёный лист на дереве, если сказать упрощённо, так же поглощает R и B, а отражает G. Ну а если мы возьмём синюю краску, то она, соответственно, перекроет части спектра, соответствующие R и G.\nНо при печати мы занимаемся смешиванием цветов через наложение полупрозрачных слоёв краски. Как нам получить, скажем, жёлтый цвет? Мы уже говорили выше, что жёлтый получается смешением красного и зелёного стимулов. Но смешав краски R и G, мы полностью перекроем весь отражённый свет от бумаги, получив чёрный:\n\nПолучается, что краски RGB не годятся в качестве компонентов для смешения: они уже слишком тёмные. Нам надо взять какие-то более светлые красители, которые могут перекрыть меньшую часть спектра, таким образом у нас будет больший простор для смешивания:\n\nТакими красителями, условно &quot;не-R&quot;, &quot;не-G&quot; и &quot;не-B&quot;, мы можем выборочно играть основными цветовыми примитивами RGB, составляя из них нужные цвета.\nНаконец-то мы можем получить наш жёлтый. Для этого понадобится краситель &quot;не-B&quot;, который перекроет синюю часть спектра и оставит R и G:\n\nВзяв &quot;не-R&quot; и &quot;не-B&quot;, мы получим зелёный:\n\nИ так далее.\nОсталось только обозвать красители по-человечески, в соответствии с тем, как они выглядят в чистом виде — и вот мы с вами открыли CMYK. Правда, пока ещё без буквы K, но это уже тема, достойная отдельного разговора.",
		"tags": [ "note"]
}
]